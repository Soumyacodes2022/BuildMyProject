import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import { useEffect, useParams, useState } from 'react'

import app from "../firebase"
import {collection,doc,setDoc,getDocs,getFirestore,addDoc, getDoc,query,where,orderBy, serverTimestamp} from "firebase/firestore"
import { async } from '@firebase/util'
import { onSnapshot } from 'firebase/firestore'
import { getAuth, onAuthStateChanged ,createUserWithEmailAndPassword,GoogleAuthProvider,signInWithPopup,signInWithEmailAndPassword} from "firebase/auth";
//import { getAuth, onAuthStateChanged ,createUserWithEmailAndPassword,GoogleAuthProvider,signInWithPopup} from "firebase/auth";
import { getStorage ,ref,uploadBytes,getDownloadURL} from "firebase/storage";
import React from 'react';
import Script from 'next/script'

export default function ClientRegistration() {
 const [route,setRoute]=useState('log');
 const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [id,setId]=useState('');
    const [r,setR]=useState('reg');
    const db=getFirestore(app)
    const provider = new GoogleAuthProvider();
    const auth = getAuth();
    const handleLogin=(event)=>{
     
        const auth = getAuth();
        signInWithPopup(auth, provider)
          .then((result) => {
            const credential = GoogleAuthProvider.credentialFromResult(result);
            const token = credential.accessToken;
            const user = result.user;
          const docRef=doc(db,"clients",user.uid);
          setDoc(docRef,{
          name:user.displayName,
          email:user.email,
          uid:user.uid,
          pic:user.photoURL
         }).then((res)=>{
           console.log(res)
          setId(user.uid)
         }).catch((err)=>{
          console.log(err)
         })
           
          }).catch((error) => {
            
            const errorCode = error.code;
            const errorMessage = error.message;
           
            const credential = GoogleAuthProvider.credentialFromError(error);
            
          });
      
      
        }
        const handleSingUpWithEmail=(event)=>{
          event.preventDefault();
          createUserWithEmailAndPassword(auth, email, password)
        .then((userCredential) => {
          // Signed in 
          const user = userCredential.user;
          // ...
         
          const docRef=doc(db,"clients",user.uid);
          setDoc(docRef,{
           name:name,
           email:user.email,
           uid:user.uid,
           pic:user.photoURL
          }).then((res)=>{
           console.log(res)
         
            setId(res.uid)
          }).catch((err)=>{
           console.log(err)
          })
      
        })
        .catch((error) => {
          const errorCode = error.code;
          const errorMessage = error.message;
          alert(errorMessage);
          // ..
        });
        }
        const handleLoginWithEmail=(event)=>{
      event.preventDefault()
      const auth = getAuth();
      signInWithEmailAndPassword(auth, email, password)
        .then((userCredential) => {
          // Signed in 
          const user = userCredential.user;
          // ...
          setId(user.uid)
      
        })
        .catch((error) => {
          const errorCode = error.code;
          const errorMessage = error.message;
          alert(errorMessage)
        });
        }
      
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
       
      </Head>
     
    <div>
    <div style={{ 
      display:'flex',
      justifyContent:'center'
      }}>
       
     <div  style={{ 
    backgroundColor: '#F8F9FA',
    padding:'40px',
    borderRadius: '5px',
    width: '300px',
    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'
  }}>
    
          <h2 style={{ 
      fontSize: '24px',
      marginBottom: '20px',
      textAlign: 'center',
      color: '#343A40',
      textTransform: 'uppercase'
    }}>Register Client</h2>
          <form onSubmit={handleSingUpWithEmail}>
             <div style={{ marginBottom: '10px' }}>
              <label htmlFor="name"style={{ 
          marginRight: '10px',
          display: 'block',
          color: '#343A40',
          fontSize: '16px'
        }}>Name:</label>
              <input type="text" id="name" value={name} onChange={(e) => setName(e.target.value)}  style={{ 
          width: '100%',
          padding: '10px',
          border: '1px solid #ced4da',
          borderRadius: '5px'
        }}/>
            </div> 
            <div style={{ marginBottom: '10px' }}>
              <label htmlFor="email" style={{ 
          marginRight: '10px',
          display: 'block',
          color: '#343A40',
          fontSize: '16px'
        }}>Email:</label>
              <input type="email" id="email" value={email} onChange={(e) => setEmail(e.target.value)} style={{ 
          width: '100%',
          padding: '10px',
          border: '1px solid #ced4da',
          borderRadius: '5px'
        }} />
            </div>
            <div style={{ marginBottom: '20px' }}>
              <label htmlFor="password" style={{ 
          marginRight: '10px',
          display: 'block',
          color: '#343A40',
          fontSize: '16px'
        }}>Password:</label>
              <input type="password" id="password" value={password} onChange={(e) => setPassword(e.target.value)} style={{ 
          width: '100%',
          padding: '10px',
          border: '1px solid #ced4da',
          borderRadius: '5px'
        }} />
            </div>
            
            <button type="submit" style={{ 
        background: '#0070f3',
        color: 'white',
        padding: '10px 20px',
        borderRadius: '5px',
        border: 'none',
        cursor: 'pointer',
        fontWeight: 'bold',
        fontSize: '16px',
        display: 'block',
        margin: '0 auto',
        width: '100%',
        maxWidth: '200px',
        textTransform: 'uppercase'
      }} >Register with google</button>
  
  
          </form>
          <button onClick={handleLogin} style={{ 
    background: '#fff',
    color: '#333',
    padding: '10px 20px',
    borderRadius: '5px',
    border: '1px solid #ccc',
    cursor: 'pointer',
    marginTop: '10px',
    fontWeight: 'bold',
    fontSize: '16px',
    display: 'block',
    margin: '0 auto',
    width: '100%',
    maxWidth: '200px',
    textTransform: 'uppercase',
    backgroundImage: 'url("https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg")',
    backgroundPosition: 'left center',
    backgroundRepeat: 'no-repeat',
    paddingLeft: '40px',
    backgroundSize: '24px 24px'
  }}>Sign in with Google</button>
          
          <div><h2 style={{ 
      fontSize: '24px',
      marginBottom: '20px',
      textAlign: 'center',
      color: '#343A40',
      textTransform: 'uppercase'
    }}>Login</h2>
          <form onSubmit={handleLoginWithEmail}>
             <div style={{ marginBottom: '10px' }}>
            </div> 
            <div style={{ marginBottom: '10px' }}>
              <label htmlFor="email" style={{ 
          marginRight: '10px',
          display: 'block',
          color: '#343A40',
          fontSize: '16px'
        }}>Email:</label>
              <input type="email" id="email" value={email} onChange={(e) => setEmail(e.target.value)} style={{ 
          width: '100%',
          padding: '10px',
          border: '1px solid #ced4da',
          borderRadius: '5px'
        }} />
            </div>
            <div style={{ marginBottom: '20px' }}>
              <label htmlFor="password" style={{ 
          marginRight: '10px',
          display: 'block',
          color: '#343A40',
          fontSize: '16px'
        }}>Password:</label>
              <input type="password" id="password" value={password} onChange={(e) => setPassword(e.target.value)} style={{ 
          width: '100%',
          padding: '10px',
          border: '1px solid #ced4da',
          borderRadius: '5px'
        }} />
            </div>
            <button type="submit" style={{ 
        background: '#0070f3',
        color: 'white',
        padding: '10px 20px',
        borderRadius: '5px',
        border: 'none',
        cursor: 'pointer',
        fontWeight: 'bold',
        fontSize: '16px',
        display: 'block',
        margin: '0 auto',
        width: '100%',
        maxWidth: '200px',
        textTransform: 'uppercase'
      }} >Log In</button>
          </form>
          <button onClick={handleLogin} style={{ 
    background: '#fff',
    color: '#333',
    padding: '10px 20px',
    borderRadius: '5px',
    border: '1px solid #ccc',
    cursor: 'pointer',
    marginTop: '10px',
    fontWeight: 'bold',
    fontSize: '16px',
    display: 'block',
    margin: '0 auto',
    width: '100%',
    maxWidth: '200px',
    textTransform: 'uppercase',
    backgroundImage: 'url("https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg")',
    backgroundPosition: 'left center',
    backgroundRepeat: 'no-repeat',
    paddingLeft: '40px',
    backgroundSize: '24px 24px'
  }}>Sign in with Google</button>
          </div>
  
        </div> 
        
    
      
  
        
  
      </div>
    </div>
    </>
  )
}

// export async function getServerSideProps({ query}) {
//   const clientId = query.clienttId;
//   const UserId = query.Userid;
//     return {
//       props: {
//         clientId,
//        UserId
//       }
//     }
//   }