import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import { useEffect, useParams, useState } from 'react'

import app from "../firebase"
import {collection,doc,setDoc,getDocs,getFirestore,addDoc, getDoc,query,where,orderBy, serverTimestamp} from "firebase/firestore"
import { async } from '@firebase/util'
import { onSnapshot } from 'firebase/firestore'
//import { getAuth, onAuthStateChanged ,createUserWithEmailAndPassword,GoogleAuthProvider,signInWithPopup} from "firebase/auth";
import { getStorage ,ref,uploadBytes,getDownloadURL} from "firebase/storage";
import React from 'react';
import Script from 'next/script'
import { useRouter } from 'next/router'

export default function ClientDashBoard({clientId,projects}) {
 const router=useRouter()
 console.log(projects)
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
       
      </Head>
     
    <div className="flex wrap bg-blue" style={{display:'flex',flexWrap:'wrap',justifyContent:'center',gap:'20px'}}>


<div style={{background:'#e6e6e6',padding:'100px',borderRadius:'10px'}} onClick={()=>{
   router.push({pathname:'/allchats',query:{UserId:clientId}})
}} >All Chats</div>
<button style={{background:'#e6e6e6',padding:'100px',borderRadius:'10px'}}    onClick={()=>{
 
  router.push({pathname:'/postproject',query:{clientId:clientId}})}}         >Post New Project</button>

    </div>
    <div style={{}}>
      <h3>All Jobs Posted</h3>
{projects.map((item)=>{
return (<div>
  <h2>{item.data.Title}</h2>
  {item.proposals.map((item)=>{
    <h2>{item.data.email}</h2>
  })}
  </div>)})}
    </div>
    </>
  )
}
export async function getServerSideProps({ query}) {
  const clientId = query.clientId;
   const db=getFirestore(app);
   const docRef=collection(db,"AllProjects")
   const allproposals=collection(db,"Proposals");
   let projects=[]
   let proposals=[]
   const snapShot=await getDocs(docRef)
   const propsnapshot=await getDocs(allproposals)
   snapShot.forEach((item)=>{
    
    if(item.data().uid===clientId){
      console.log(item.data())
      propsnapshot.forEach((doc)=>{
        if(doc.data().projectid===item.id){
          proposals.push({id:doc.id,data:doc.data()})
         console.log(doc.data())
          //projects.push({id:item.id,data:item.data()})
        }
      })
      
    }
   })

console.log(projects)
console.log(proposals)

    return {
props: {
       clientId,
    projects:projects
     }
   }
  }